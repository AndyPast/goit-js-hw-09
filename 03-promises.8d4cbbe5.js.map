{"mappings":"AAEA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBA0BjC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAgB,C,SAAEL,E,MAAUC,GAElC,OAAO,IAAIK,SAAQ,CAACC,EAASC,KACvBN,EACFK,EAAQF,GAERG,EAAOH,EAAc,G,CA/B3Bb,EAAKC,KAAKgB,iBAAiB,UAE3B,SAAwBC,GACtBA,EAAEC,iBAEF,IAAIC,EAAeC,OAAOrB,EAAKI,MAAMkB,OAErC,IAAK,IAAIC,EAAI,EAAGA,GAAKF,OAAOrB,EAAKM,OAAOgB,OAAQC,GAAK,EACnDhB,EAAcgB,EAAGH,GACdI,MAAK,EAAChB,SAAEA,EAAQC,MAAEA,MACjBgB,YAAW,KACTC,QAAQC,IAAI,uBAAqBnB,QAAiBC,MAAU,GAC3DA,EAAM,IAEVmB,OAAM,EAACpB,SAAEA,EAAQC,MAAEA,MAClBgB,YAAW,KACTC,QAAQC,IAAI,sBAAoBnB,QAAeC,MAAU,GACxDA,EAAM,IAEbW,GAAgBC,OAAOrB,EAAKK,KAAKiB,M","sources":["src/js/03-promises.js"],"sourcesContent":["// import Notiflix from \"notiflix\";\n\nconst refs = {\n  Form: document.querySelector(\".form\"),\n  Delay: document.querySelector(\"[name='delay']\"),\n  Step: document.querySelector(\"[name='step']\"),\n  Amount: document.querySelector(\"[name='amount']\"),\n};\n\nrefs.Form.addEventListener(\"submit\", submitPromises);\n\nfunction submitPromises(e) {\n  e.preventDefault();\n\n  let currentDelay = Number(refs.Delay.value);\n\n  for (let i = 1; i <= Number(refs.Amount.value); i += 1) {\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        setTimeout(() => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        }, delay);\n      })\n      .catch(({ position, delay }) => {\n        setTimeout(() => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        }, delay);\n      });\n    currentDelay += Number(refs.Step.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const objectPromise = { position, delay };\n\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(objectPromise);\n    } else {\n      reject(objectPromise);\n    }\n  });\n}\n"],"names":["$47d4ff9957288465$var$refs","Form","document","querySelector","Delay","Step","Amount","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","objectPromise","Promise","resolve","reject","addEventListener","e","preventDefault","currentDelay","Number","value","i","then","setTimeout","console","log","catch"],"version":3,"file":"03-promises.8d4cbbe5.js.map"}